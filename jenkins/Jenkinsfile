pipeline {
    agent any

    tools {nodejs "nodejs-18"}

    environment {
            GIT_CREDENTIALS_ID = 'Epstein-Conbus'  // Jenkins에 설정된 Git 자격 증명 ID
    }


    stages {
         stage('initialize') {
            steps {
                sh "java --version"
                sh "node --version"
                echo '배포 필요 여부 확인중...'
                script {
                    // 현재 시간을 밀리초로 저장
                    env.CURRENT_TIME = new Date().getTime().toString()
                    def commitMessage = sh(script: 'git log --format=%B -n 1 HEAD', returnStdout: true).trim()
                    def jenkinsCommit = commitMessage.contains('젠킨스 빌드 및 배포가 완료되었습니다.')
                    def skipDeploy = commitMessage.contains('--skip')
                    env.shouldDeploy = (!jenkinsCommit && !skipDeploy).toString()
                    if (env.shouldDeploy == 'true') {
                        echo '배포 필요, 다음 파이프라인 진행'
                    } else {
                        echo '배포 불필요, 다음 파이프라인 스킵'
                    }
                }
            }
        }

        stage('npm install') {
            when {
                expression { return env.shouldDeploy == 'true' }
            }
            steps {
                echo 'deploying the application...'
                sh "npm install"
            }
        }

        stage('Merge to Master') {
            when {
                expression { return env.shouldDeploy == 'true' }
            }
            steps {
                script {
                    withCredentials([string(credentialsId: env.GIT_CREDENTIALS_ID, variable: 'token')]) {
                        echo '대충 배포스크립트 작성 grunt'
                    }
                }
            }
        }
    }
}