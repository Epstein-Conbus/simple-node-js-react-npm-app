pipeline {
    agent any

    stages {
         stage('initialize') {
            steps {
                echo 'INITIALIZE'
                script {
                    // 현재 시간을 밀리초로 저장
                    env.CURRENT_TIME = new Date().getTime().toString()
                }
            }
        }

        stage('checkout') {
            steps {
                // 형식화된 현재 시간을 쉘 스크립트로 전달하여 출력
                sh "echo 'Current time: ${env.CURRENT_TIME}'"

                // Groovy 스크립트에서는 문자열 인터폴레이션을 사용하여 현재 시간 출력
                echo '''
                CHECKOUT

                ${env.CURRENT_TIME}
                '''

                // git 체크아웃
                git url: 'https://github.com/Epstein-Conbus/simple-node-js-react-npm-app.git', branch: 'master'
            }
        }
//         stage('deploy') {
//             steps {
//                 echo 'deploying the application...'
//                 sh 'npm install'
//             }
//         }
//         stage('file edit') {
//             steps {
//                 sh """
//                     FILE_PATH="./src/App.js"
//                     OLD_STRING="console.log([0-9]+)"
//                     NEW_STRING="console.log(\${env.CURRENT_TIME})"
//
//                     if [ -f "\$FILE_PATH" ]; then
//                         sed -E "s|\$OLD_PATTERN|\$NEW_STRING|g" "\$FILE_PATH" > "\$FILE_PATH.tmp"
//                         mv "\$FILE_PATH" "\$FILE_PATH.bak"
//                         mv "\$FILE_PATH.tmp" "\$FILE_PATH"
//                         echo "파일 수정 완료: \$FILE_PATH"
//                     else
//                         echo "파일을 찾을 수 없습니다: \$FILE_PATH"
//                         exit 1
//                     fi
//                 """
//             }
//         }
//         stage('Commit Changes') {
//             steps {
//                 script {
//                     // 변경 사항 커밋
//                     sh """
//                         git add .
//                         if git diff-index --quiet HEAD; then
//                             echo "No changes detected"
//                         else
//                             git commit -m "Jenkins has merged this build"
//                         fi
//                     """
//                 }
//             }
//         }
//         stage('Merge to Master') {
//             steps {
//                 // 변경 사항을 main 브랜치에 머지
//                 sh """
//                     git checkout master
//                     git pull origin master
//                     git merge --no-ff your-feature-branch
//                     git push origin master
//                 """
//             }
//         }


    }
}